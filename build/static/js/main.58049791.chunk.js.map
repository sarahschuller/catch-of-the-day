{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","e","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.58049791.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n    return (cents / 100).toLocaleString(\"en-US\", {\r\n      style: \"currency\",\r\n      currency: \"USD\"\r\n    });\r\n  }\r\n  \r\n  export function rando(arr) {\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n  }\r\n  \r\n  export function slugify(text) {\r\n    return text\r\n      .toString()\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, \"-\")\r\n      .replace(/[^\\w-]+/g, \"\")\r\n      .replace(/--+/g, \"-\")\r\n      .replace(/^-+/, \"\")\r\n      .replace(/-+$/, \"\");\r\n  }\r\n  \r\n  export function getFunName() {\r\n    const adjectives = [\r\n      \"adorable\",\r\n      \"beautiful\",\r\n      \"clean\",\r\n      \"drab\",\r\n      \"elegant\",\r\n      \"fancy\",\r\n      \"glamorous\",\r\n      \"handsome\",\r\n      \"long\",\r\n      \"magnificent\",\r\n      \"old-fashioned\",\r\n      \"plain\",\r\n      \"quaint\",\r\n      \"sparkling\",\r\n      \"ugliest\",\r\n      \"unsightly\",\r\n      \"angry\",\r\n      \"bewildered\",\r\n      \"clumsy\",\r\n      \"defeated\",\r\n      \"embarrassed\",\r\n      \"fierce\",\r\n      \"grumpy\",\r\n      \"helpless\",\r\n      \"itchy\",\r\n      \"jealous\",\r\n      \"lazy\",\r\n      \"mysterious\",\r\n      \"nervous\",\r\n      \"obnoxious\",\r\n      \"panicky\",\r\n      \"repulsive\",\r\n      \"scary\",\r\n      \"thoughtless\",\r\n      \"uptight\",\r\n      \"worried\"\r\n    ];\r\n  \r\n    const nouns = [\r\n      \"women\",\r\n      \"men\",\r\n      \"children\",\r\n      \"teeth\",\r\n      \"feet\",\r\n      \"people\",\r\n      \"leaves\",\r\n      \"mice\",\r\n      \"geese\",\r\n      \"halves\",\r\n      \"knives\",\r\n      \"wives\",\r\n      \"lives\",\r\n      \"elves\",\r\n      \"loaves\",\r\n      \"potatoes\",\r\n      \"tomatoes\",\r\n      \"cacti\",\r\n      \"foci\",\r\n      \"fungi\",\r\n      \"nuclei\",\r\n      \"syllabuses\",\r\n      \"analyses\",\r\n      \"diagnoses\",\r\n      \"oases\",\r\n      \"theses\",\r\n      \"crises\",\r\n      \"phenomena\",\r\n      \"criteria\",\r\n      \"data\"\r\n    ];\r\n  \r\n    return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n  }","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getFunName } from \"../helpers\";\r\n\r\nclass StorePicker extends React.Component {\r\n  myInput = React.createRef();\r\n  static propTypes = {\r\n    history: PropTypes.object\r\n  };\r\n\r\n  goToStore = event => {\r\n    // 1. Stop the form from submitting\r\n    event.preventDefault();\r\n    // 2. get the text from that input\r\n    const storeName = this.myInput.current.value;\r\n    // 3. Change the page to /store/whatever-they-entered\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"store-picker\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter A Store</h2>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          required\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store →</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className=\"top\">\r\n                <h1>Catch \r\n                    <span className=\"ofThe\">\r\n                        <span className=\"of\">Of</span> \r\n                        <span className=\"the\">The</span>\r\n                    </span>\r\n                    Day</h1>\r\n                <h3 className=\"tagline\">\r\n                <span>{this.props.tagline}</span>\r\n            </h3>\r\n            </header>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func\r\n  };\r\n  renderOrder = key => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === \"available\";\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key,\r\n      timeout: { enter: 500, exit: 500 }\r\n    };\r\n    // Make sure the fish is loaded before we continue!\r\n    if (!fish) return null;\r\n\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span> {count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n            \r\n            <p>\r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>\r\n                  &times;\r\n            </button>\r\n            </p>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n      // make sure the fish have loaded before continuing\r\n      if(!fish) return null;\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n    static propTypes = {\r\n        addFish: PropTypes.func,\r\n    };\r\n\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    createFish = (e) => {\r\n        // Stop the form from submitting\r\n        e.preventDefault(); \r\n        // Fish object\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value,\r\n        };\r\n        this.props.addFish(fish);\r\n        // Refresh the form\r\n        e.currentTarget.reset();\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\r\n                <select name=\"status\" ref={this.statusRef} >\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\r\n                <button type=\"submit\">+ Add Fish</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func\r\n  };\r\n  handleChange = e => {\r\n    // console.log(e.currentTarget.value);\r\n    // update that fish\r\n    // 1. Take a copy of the current fish\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [e.currentTarget.name]:\r\n        e.currentTarget.name === 'price'\r\n          ? parseFloat(e.currentTarget.value)\r\n          : e.currentTarget.value\r\n    };\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          Remove Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button \r\n        className=\"github\" \r\n        onClick={() => props.authenticate('Github')}>\r\n            Log in with Github\r\n        </button>\r\n\r\n        <button \r\n        className=\"google\" \r\n        onClick={() => props.authenticate('Google')}>\r\n            Log in with Google\r\n        </button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({  \r\n        apiKey: \"AIzaSyAjBTvBXwnhcFugKyKd_d0qqZefKs3il1c\",     \r\n        authDomain: \"catch-of-the-day-1313.firebaseapp.com\",\r\n        databaseURL: \"https://catch-of-the-day-1313-default-rtdb.firebaseio.com\",     \r\n})\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// this is a named export\r\nexport { firebaseApp };\r\n\r\n// this is a default export\r\nexport default base;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n    addFish: PropTypes.func\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async authData => {\r\n    // 1 .Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    console.log(store);\r\n    // 2. Claim it if there is no owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      });\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n  };\r\n\r\n  authenticate = provider => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  };\r\n\r\n  logout = async () => {\r\n    console.log(\"Logging out!\");\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>;\r\n\r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // 2. check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // 3. They must be the owner, just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n    fish1: {\r\n      name: \"Pacific Halibut\",\r\n      image: \"/images/hali.jpg\",\r\n      desc:\r\n        \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n      price: 1724,\r\n      status: \"available\"\r\n    },\r\n  \r\n    fish2: {\r\n      name: \"Lobster\",\r\n      image: \"/images/lobster.jpg\",\r\n      desc:\r\n        \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n      price: 3200,\r\n      status: \"available\"\r\n    },\r\n  \r\n    fish3: {\r\n      name: \"Sea Scallops\",\r\n      image: \"/images/scallops.jpg\",\r\n      desc:\r\n        \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n      price: 1684,\r\n      status: \"unavailable\"\r\n    },\r\n  \r\n    fish4: {\r\n      name: \"Mahi Mahi\",\r\n      image: \"/images/mahi.jpg\",\r\n      desc:\r\n        \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n      price: 1129,\r\n      status: \"available\"\r\n    },\r\n  \r\n    fish5: {\r\n      name: \"King Crab\",\r\n      image: \"/images/crab.jpg\",\r\n      desc:\r\n        \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n      price: 4234,\r\n      status: \"available\"\r\n    },\r\n  \r\n    fish6: {\r\n      name: \"Atlantic Salmon\",\r\n      image: \"/images/salmon.jpg\",\r\n      desc:\r\n        \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n      price: 1453,\r\n      status: \"available\"\r\n    },\r\n  \r\n    fish7: {\r\n      name: \"Oysters\",\r\n      image: \"/images/oysters.jpg\",\r\n      desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n      price: 2543,\r\n      status: \"available\"\r\n    },\r\n  \r\n    fish8: {\r\n      name: \"Mussels\",\r\n      image: \"/images/mussels.jpg\",\r\n      desc:\r\n        \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n      price: 425,\r\n      status: \"available\"\r\n    },\r\n  \r\n    fish9: {\r\n      name: \"Jumbo Prawns\",\r\n      image: \"/images/prawns.jpg\",\r\n      desc:\r\n        \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n      price: 2250,\r\n      status: \"available\"\r\n    }\r\n  };\r\n  \r\n  export default fishes;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number\r\n    }),\r\n    addToOrder: PropTypes.func,\r\n    index: PropTypes.string\r\n  };\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === \"available\";\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n        </h3>\r\n        <span className=\"price\">{formatPrice(price)}</span>\r\n        <p>{desc}</p>\r\n        <button\r\n          disabled={!isAvailable}\r\n          onClick={() => this.props.addToOrder(this.props.index)}\r\n        >\r\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Fish;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // reinstate local store\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if(localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) })\r\n    }\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes',\r\n    });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = fish => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to that fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // 1. Take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Update that state\r\n    fishes[key] = updatedFish;\r\n    // 3. Set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = (key) => {\r\n    // 1. Take a copy of state\r\n    const fishes = {...this.state.fishes };\r\n    // 2. Update the state\r\n    fishes[key] = null;\r\n    // 3. Set the new state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = key => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeFromOrder = key => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. remove that item from order - can use delete as this is not mirrored to firebase\r\n    delete order[key];\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          removeFromOrder={this.removeFromOrder}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>NOT FOUND!!?!?!1</h2>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Router from \"./components/Router\";\r\nimport \"./css/style.css\";\r\n\r\nrender(<Router />, document.querySelector(\"#main\"));\r\n"],"sourceRoot":""}